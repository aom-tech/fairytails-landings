---
import Container from "./Container.astro";
import SectionHeading from "./SectionHeading.astro";
const { hasPhone } = Astro.props;
---

<Container>
  <div class="relative flex flex-col items-center md:flex-row" id="contact">
    <SectionHeading> Регистрация </SectionHeading>
    <!-- <div class="flex items-center py-5 md:w-8/12 md:py-10">
        <p class="text-xl font-normal leading-7 text-center md:text-left">Connect with Us: Let's Discuss Your Digital Marketing Needs</p>
    </div> -->
  </div>

  <div class="relative flex flex-col-reverse lg:flex-row my-6">
    <div class:list={["row items-center md:px-20 md:w-8/12 md:py-10", { "mt-12": !hasPhone }]}>
      <form
        id="form"
        class="space-y-8 md:w-full"
        class="needs-validation"
        data-astro-reload
        method="POST"
      >
        { hasPhone && <div>
          <label for="tel" class="block mb-2 text-base text-coal font-light"
            >Телефон</label
          >
          <input
            type="tel"
            id="tel"
            name="Phone"
            class="shadow-sm  rounded-lg bg-beige border text-coal font-light text-base focus:ring-black focus:border-black block w-full p-2.5"
            placeholder="Телефон"
            required
          />
        </div>
      }
        <div>
          <label for="email" class="block mb-2 text-base text-coal font-light"
            >Email</label
          >
          <input
            type="email"
            id="email"
            name="Email"
            class="block rounded-lg p-3 w-full text-base text-coal font-light bg-beige border shadow-sm focus:ring-black focus:border-black"
            placeholder="Email"
            required
          />
        </div>
        <input type="hidden" name="utm_source" value="">
        <input type="hidden" name="utm_medium" value="">
        <input type="hidden" name="utm_campaign" value="">
        <button
          type="submit"
          id="submit"
          class="w-full py-5 border rounded-lg border-ochre justify-center gap-2.5 inline-flex hover:border-coal text-ochre hover:text-coal"
        >
          <div class="text-center text-xl font-light leading-7">Отправить</div>
        </button>
        <div id="result" class="mt-3 text-center"></div>
      </form>
    </div>
    <div
      class="flex-col flex justify-start md:px-20 md:py-10 gap-4 md:gap-8 font-light text-lg lg:mt-8"
    >
      <h2 class="font-lena text-darkochre text-4xl md:text-5xl">Запускаемся в мае</h2>
      <p class="text-xl">
        Оставьте свои контактные данные, чтобы не пропустить и стать
        Первопроходцем!
      </p>
      <p class="text-ochre font-light">* Первым 20 пользователем дарим МЕСЯЦ бесплатного пользования.</p>
    </div>
  </div>
  <div class="md:mt-48"></div>
</Container>
<style>
  .invalid-feedback,
  .empty-feedback {
    display: none;
  }

  .was-validated :placeholder-shown:invalid ~ .empty-feedback {
    display: block;
  }

  .was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
    display: block;
  }

  .is-invalid,
  .was-validated :invalid {
    border-color: #dc3545;
  }
</style>

<!-- UTM quering -->
<script is:inline>
import { Code } from "astro:components";

var queryForm=function(e){var t=!(!e||!e.reset)&&e.reset,n=window.location.toString().split("?");if(n.length>1){var o=n[1].split("&");for(s in o){var r=o[s].split("=");(t||null===sessionStorage.getItem(r[0]))&&sessionStorage.setItem(r[0],decodeURIComponent(r[1]))}}for(var i=document.querySelectorAll("input[type=hidden], input[type=text]"),s=0;s<i.length;s++){var a=sessionStorage.getItem(i[s].name);a&&(document.getElementsByName(i[s].name)[0].value=a)}};setTimeout(function(){queryForm()},3e3);</script>

<!-- Form submittion -->
<script is:inline>
   const form = document.querySelector("#form")
   const submitButton = document.querySelector("#submit")
   const result = document.querySelector("#result");
   const scriptURL = 'https://script.google.com/macros/s/AKfycbydCC9NHPg9UZS81h9rolb46k5m9OzamQrLG7riqY_fw4mKYYpNZGptoJJQOm4AfKsR/exec'

   form.addEventListener('submit', e => {
     submitButton.disabled = true
     e.preventDefault()

     if (window.VK) {
        VK.Goal('lead')
     }

     let formData = new FormData(form)
     formData.append('URL', window.location)

     result.innerHTML = "Отправляем..."

     fetch(scriptURL, { method: 'POST', body: formData})
          .then(async (response) => {
            let json = await response.json();
            if (response.status == 200) {
              result.classList.add("text-green-500");
              result.innerHTML = "Отправлено. Скоро с вами свяжемся!"
            } else {
              console.log(response);
              result.classList.add("text-red-500");
              result.innerHTML = json.message;
            }
          })
          .catch((error) => {
            console.log(error);
            result.innerHTML = "Ошибка! Проверьте введнные данные!";
          })
          .then(function () {
            submitButton.innerHTML = 'Отправить снова'
            form.reset();
            form.classList.remove("was-validated");
          });
   })
</script>
